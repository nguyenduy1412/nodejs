<div >
	<script src="/static/fe/js/vendor/jquery-1.12.4.min.js"></script>
	<!-- bootstrap js -->

	<script src="/static/fe/js/bootstrap.min.js"></script>

	<!-- owl.carousel js -->
	<script src="/static/fe/js/owl.carousel.min.js"></script>
	<!-- meanmenu js -->
	<script src="/static/fe/js/jquery.meanmenu.js"></script>
	<!-- wow js -->
	<script src="/static/fe/js/wow.min.js"></script>
	<!-- jquery.parallax-1.1.3.js -->
	<script src="/static/fe/js/jquery.parallax-1.1.3.js"></script>
	<!-- jquery.countdown.min.js -->
	<script src="/static/fe/js/jquery.countdown.min.js"></script>
	<!-- jquery.flexslider.js -->
	<script src="/static/fe/js/jquery.flexslider.js"></script>
	<!-- chosen.jquery.min.js -->
	<script src="/static/fe/js/chosen.jquery.min.js"></script>
	<!-- jquery.counterup.min.js -->
	<script src="/static/fe/js/jquery.counterup.min.js"></script>

	<script src="/static/fe/js/waypoints.min.js"></script>

	<script src="/static/fe/js/plugins.js"></script>

	<script src="/static/fe/js/main.js"></script>
	<script src="/static/fe/js/plugins1.js"></script>
	<script src="/static/fe/js/custom.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
	<!-- Bootstrap JS -->
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
	<script>
		$(document).ready(function () {
			$('#chooseButton').click(function () {
				$('#imageInput').click();
			});

			$('#imageInput').change(function () {
				var file = this.files[0];
				if (file) {
					var reader = new FileReader();
					reader.onload = function (e) {
						$('#imgCus').attr('src', e.target.result);
						$('#imgCus').show();
					};
					reader.readAsDataURL(file);
				}
			});
			$('#showAcc').click(function () {
				$('#menuShow').toggleClass("show");
			});
		});
		var element = document.getElementById('header-sticky');
		var height = element.clientHeight;
		console.log(height);
		var chieucao = document.getElementById('chieucao');
		chieucao.style.height = height + 'px';
	</script>
	<script>
		function TotalSum() {
			sum=0
			quantityCart=0
			$('.product-subtotal.fomatPrice').each(function () {
				// Lấy giá trị trong thẻ `<td>` và loại bỏ các ký tự không phải số
				let priceText = $(this).text().replace(/[^0-9]/g, '');
				console.log("GIas ",priceText);
				// Chuyển giá trị từ chuỗi sang số và cộng vào tổng
				sum += parseFloat(priceText);
			});
			$('.product-quantity .ip').each(function () {
				// Lấy giá trị trong thẻ `<td>` và loại bỏ các ký tự không phải số
				let quantity = $(this).val();
				console.log("Quantity",quantity)
				// Chuyển giá trị từ chuỗi sang số và cộng vào tổng
				quantityCart += parseInt(quantity);
			});
			$('.quantityCart').text(quantityCart);
			$('.reloadAmout').text(new Intl.NumberFormat('vi-VN').format(sum) + ' đ')
		}
		function Xoa() {
			$('.deleteItem').click(function () {
				
				let cartItem = $(this).attr('id');
				console.log(cartItem);
				var row = $(this).closest('tr'); 
				let quantity = row.find('.product-quantity input').val(); 
				let price=row.find('.product-price .amount').text().replace(/[^\d]/g, '');
				console.log("price: " + price)
				
				let money= $('.reloadAmout').first().text().replace(/[^\d]/g, '');
				
				let newAmount = Number(money) - Number(price);

// Định dạng lại số với dấu phân cách hàng nghìn và thêm 'đ'
				let formattedAmount = new Intl.NumberFormat('vi-VN').format(newAmount) + ' đ';
			
				row.remove();
				TotalSum()
				axios.delete(`/api/detailCart/${cartItem}`)
				.then(function (response) {
					
					toatsjs("Xóa thành công");
					console.log("Xóa thành công:", response.data);
				})
				.catch(function (error) {
					console.error("Lỗi khi xóa:", error);
				});
				
				


			});
		}
		Xoa();
		function AddCart() {
			$('.add-to-card').click(function () {
				let productId = $(this).attr('id');
				let userId = $('#userId').val();
				console.log("vào không");
				let data = {
					productId: productId,
					userId: userId
				};
				console.log(data)
				axios.post('/api/detailCart', data)
					.then(function (response) {
						const quantityCart = $('.quantityCart').text();
						console.log("Số lượng: ",quantityCart);
						$('.quantityCart').text(Number(quantityCart)+1);
						toatsjs("Thêm thành công");
					})
					.catch(function (error) {
						console.error('Lỗi: ' + error);
					});
			});
		}
		AddCart();
		
		function ChangQuantity() {
			$('.ip').change(function (e) {
				let value = e.target.value;
				let cartId = e.target.id;
				let price = $(this).closest('tr').find('.amount').text();
				console.log(EpGia(price));
				let total = formatPrice1(EpGia(price) * parseInt(value));
				$(this).closest('tr').find('.product-subtotal').text(total);
				let data = {quantity: parseInt(value)}
				
				TotalSum()
				axios.patch(`/api/detailCart/${cartId}`, data, {
					headers: {
						'Content-Type': 'application/json'
					},
					timeout: 600000
				})
				.then(response => {
					console.log("SUCCESS : ", response.data);
				})
				.catch(error => {
					console.log("ERROR : ", error);
				});
			})
		}
		ChangQuantity();
		function XoaWishList() {
			$('.delete-favourite').click(function () {
				// Xử lý sự kiện click ở đây
				// Ví dụ: In ra nội dung của nút được click
				let id = $(this).attr('id');
				console.log(id);

				var parentTr = $(this).closest('tr');

				// Xóa đi phần tử cha <tr>
				parentTr.remove();
				$.ajax({
					type: "DELETE",
					url: `/api/favourite/delete/${id}`,
					cache: false,
					timeout: 600000,
					success: function () {
						// Xử lý khi request DELETE thành công (nếu cần)
						toatsjs("Xóa thành công")
					},
					error: function (e) {
						console.log("Lỗi: " + e);
					}
				});


			});
		}
		XoaWishList();
	</script>
	<script>
		$('.pricebook').each(function () {
			var originalPrice = parseFloat($(this).text());

			if (!isNaN(originalPrice)) {
				var formattedPrice = formatPrice(originalPrice);
				$(this).text(formattedPrice);
			}
		});
		$('.fomatPrice').each(function () {
			var originalPrice = EpGia($(this).text());
			var gia = formatPrice1(originalPrice);
			$(this).text(gia);
		})
		function EpGia(price) {
			price = price.replace(" đ", "");
			var price = parseInt(price.replace(".", ""));
			return price;
		}
		function formatPrice1(price) {
			return price.toLocaleString('vi-VN') + ' đ';
		}
		function formatPrice(price) {
			if (price >= 1000) {
				return (price / 1000).toFixed(0) + "k";
			} else {
				return price.toFixed(0);
			}
		}
		function toatsjs(messege) {
			$('.toast-body').text(messege)
			$('#liveToast').toast({
				delay: 1000  // Thiết lập thời gian hiển thị của Toast
			});
			$('#liveToast').toast('show');
		}
		function XemSanPham() {
			$('.action-view').click(function () {
				let bookId = $(this).attr('id');
				console.log("Hello")
				$.ajax({
					type: 'GET',
					url: `/api/book/view/${bookId}`, // Loại bỏ dấu ngoặc đơn xung quanh biến
					cache: false,
					timeout: 60000, // Đã sửa thành 60000 (milliseconds)
					success: function (data) {
						// Loại bỏ dấu ngoặc đơn xung quanh biến id
						console.log("Helllo");
						$('#productModal').html(data);
						XemSanPham();
					},
					error: function (e) {
						console.log("Lỗi: " + e);
					}
				});
			});
		}
		XemSanPham();
		$(document).ready(function () {
			$(".review-control-vote .star").click(function () {
				var index = $(this).index(); // Lấy chỉ mục của ngôi sao được click
				$(".review-control-vote .star").each(function (idx) {
					$(this).toggleClass('gold', idx <= index); // Thay đổi màu sắc của ngôi sao
				});
				var starCount = index + 1; // Chỉ mục bắt đầu từ 0 nên cần cộng thêm 1
        		$("#star-count").text(starCount); // Hiển thị số sao được chọn
        		$("#star").val(starCount);
			});
			
		});


	</script>
</div>